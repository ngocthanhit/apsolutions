<%@ page language="java" import="com.intuit.quickbase.util.*,com.bke1.util.*" %><%@ page import="ibizqb.*"%> <%@ page buffer="256kb"%>  <%@ page import="java.util.*"%><%@ page import="java.text.SimpleDateFormat"%>      <%@ page import="java.lang.reflect.Array"%>  <%@ page import="org.w3c.dom.Document"%>  <%@ page import="org.xml.sax.InputSource"%>  <%@ page import="org.w3c.dom.Element"%>  <%@ page import="org.w3c.dom.NodeList"%>  <%@ page import="org.w3c.dom.Node"%> <%@ include file="include.jsp" %><form method=post><center><table width="90%"> <tr><td> <td><input type=hidden name=vendor value="" size=40> <tr><td><td><input type=hidden name=server value="http://localhost:2080" size=40> <tr><td><td><input type=submit value="  Import new vendors associated to Company AA  "></table></center></form> <%      if (request.getMethod().equalsIgnoreCase("POST")) {	    	      String strURL = "https://docorganiz.quickbase.com/db/";	 String s4 = "sortorder-AD";	 String vendorTableId = "bd77scjic";     String u = "ramyajayaraman1@gmail.com";	 String p = "Archana.v1";		       System.out.println("user name"+u);	 System.out.println("password"+p);		  		  	 QuickBaseClient qdb12 = new QuickBaseClient(u ,p , strURL);     Vector vector = qdb12.doQuery(vendorTableId, "{12.EX.'1'}", "7", "7", s4);				 	 //getting the client id from  quickbooks     final javax.servlet.jsp.JspWriter ps = out;     Objsearch search1 = new Objsearch();	 Vendor vendor1 = new Vendor();	      	 vendor1.setQBConnectionString("URL='" + request.getParameter("server") + "'");	 search1.setQBConnectionString("URL='" + request.getParameter("server") + "'");	 search1.reset();	 search1.setQueryType(1);			 search1.setNameContains(request.getParameter("vendor"));			 //Only return a maximum of 40 results	 search1.setMaxResults(80);  	 String vendorNameBooks[] = new String[40];    	 int insert = 0;	 search1.search();		 HashMap infoHash = new  HashMap();	 String primaryKey ="";     String vendorBooks = null;	 String vendorAccountType = null;	 String vendorAccountName = null;	 String vendorType = null;	 String vendorPaymentTerms = null;	 String vendorCreditLimit = null;	 String vendorIsInactive = null;	 String vendorCompanyName = null;     String vendorVendorName = null;	 String vendorAccountNumber = null;				 HashMap hashmap1 = null;						 for (int i = 0; i< search1.getResultCount(); i++) 	 {		vendor1.reset();		vendor1.setQBResponseAggregate(search1.getResultAggregate(i));		   										 		vendorVendorName = vendor1.getVendorName();												 		System.out.println("******vendor Books*****"+vendorVendorName);		//System.out.println("***********"+vector.size());		int a=0;					for(int j = 0; j <= vector.size() - 1; j++)        {		         hashmap1 = (HashMap)vector.elementAt(j);         Iterator iterator = hashmap1.values().iterator();         while (iterator.hasNext())		 {		   String vendorBase = (String)iterator.next();		   System.out.println("size"+vector.size());		   System.out.println("Base"+vendorBase);					   if(vendorBase.equals(vendorVendorName))		   {			 System.out.println("equal******");			 break;		   }		   else		   {			// System.out.println("******vendor Books*****"+vendorNameBooks[j]);			a++;			System.out.println("a **********" +a);							System.out.println("vector.size()" +vector.size());			System.out.println("check()" +(a==vector.size()));			if(a==vector.size())			{			 System.out.println("inside if");			 infoHash.put(String.valueOf(7),vendorVendorName);			 infoHash.put(String.valueOf(12),String.valueOf(1));			 infoHash.put(String.valueOf(11),vendor1.getCompanyName());			 infoHash.put(String.valueOf(14),vendor1.getAccountNumber());			 infoHash.put(String.valueOf(21),vendor1.getVendorTypeName());			 infoHash.put(String.valueOf(8),vendor1.getTermsName());			 System.out.println("*******payment terms from QB"+vendor1.getTermsName());			 infoHash.put(String.valueOf(25),String.valueOf(vendor1.getCreditLimit()));			 infoHash.put(String.valueOf(26),String.valueOf(vendor1.isIsActive()));			 System.out.println("Hash"+infoHash);			 primaryKey = qdb12.addRecord(vendorTableId,infoHash);			 System.out.println("primary key"+primaryKey);    		}  	// end if											   }// end else				   	      }//end if	     }//end for				 								          			}// end for	}// end form if				%>				