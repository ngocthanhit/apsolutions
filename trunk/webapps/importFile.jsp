<%@ page language="java" import="com.intuit.quickbase.util.*,com.bke1.util.*" %><%@ page import="ibizqb.*"%> <%@ page buffer="256kb"%>  <%@ page import="java.util.*"%><%@ page import="java.text.SimpleDateFormat"%>      <%@ page import="java.lang.reflect.Array"%>  <%@ page import="org.w3c.dom.Document"%>  <%@ page import="org.xml.sax.InputSource"%>  <%@ page import="org.w3c.dom.Element"%>  <%@ page import="org.w3c.dom.NodeList"%>  <%@ page import="org.w3c.dom.Node"%> <%@ page import="java.io.*"%>  <FORM  ENCTYPE="multipart/form-data" ACTION="importCSV.jsp" METHOD=POST>		<br><br><br>	  <center><table border="2" >                    <tr><center><td colspan="2"><p align="center"><B>Upload File In QuickBase</B><center></td></tr>                    <tr><td><b>Choose the file To Upload:</b></td>                    <td><INPUT NAME="F1" TYPE="file"></td></tr>					<tr><td colspan="2"><p align="right"><INPUT TYPE="submit" VALUE="Send File" ></p></td></tr>             <table>     </center>           </FORM> <%      if (request.getMethod().equalsIgnoreCase("POST")) {	 	 	 	 /*CSVReader reader = new CSVReader(new FileReader("c:/Archana/QuickBase.CSV"));   		 List myEntries = reader.readAll();		 for(int i=0;i<= myEntries.size();i++){    	 System.out.println("Values"+myEntries[i]);		 }	 	 }*/		       						 String primaryKey ="";		 String primaryKey1 ="";		 String invoiceTableId = "bd77scjia";		 String line = null;		 String vendor = null;		 String companyName = null;		 String accountNo = null;		 String type = null;		 String creditLimit = null;		 String vendorIsActive = null;		 String clientID = null;		 String vendorID = null;		 ArrayList list = new ArrayList();		 String u = "ramyajayaraman1@gmail.com";		 String p = "Archana.v1";		 String strURL = "https://docorganiz.quickbase.com/db/";		 HashMap infoHash = new  HashMap();		 HashMap infoHash1 = new  HashMap();		 QuickBaseClient qdb12 = new QuickBaseClient(u ,p , strURL);		 //File file = new File("c:/Archana/QuickBase.CSV");		 		 String header1 = "Vendor";		 String header2 = "Number";		 String checkHeader2 = "";		 String lineItemTableId = "bd77scjib";		 String invoiceNumber = "";		 String file = "";		 String saveFile = "";		 String contentType = request.getContentType();		 String vendorName = "13";		 String accNo = "112";		 String terms = "14";		 String invoice = "23";		 String invDate = "24";		 String appAmt = "29";		 String countAPP = "124";		 String invDue = "25";		 String recordID = "3";		 String lineAccountNumber = "16";		 String lineAccountName = "17";		 String lineAmount = "22";		 String desc = "15";		 String lineHeaderID = "6";		 		 		 		 if ((contentType != null) && (contentType.indexOf("multipart/form-data") >= 0))		  { 		      DataInputStream in = new DataInputStream(request.getInputStream());			  //we are taking the length of Content type data			  int formDataLength = request.getContentLength();			  byte dataBytes[] = new byte[formDataLength];			  int byteRead = 0;			  int totalBytesRead = 0;			  			  //this loop converting the uploaded file into byte code			   while (totalBytesRead < formDataLength)			   {			     byteRead = in.read(dataBytes, totalBytesRead, formDataLength);			     totalBytesRead += byteRead;			   }			   file = new String(dataBytes);			   //for saving the file name			   saveFile = file.substring(file.indexOf("filename=\"") + 10);			   saveFile = saveFile.substring(0, saveFile.indexOf("\n"));			   saveFile = saveFile.substring(saveFile.lastIndexOf("\\")+ 1,saveFile.indexOf("\""));			   int lastIndex = contentType.lastIndexOf("=");			   String boundary = contentType.substring(lastIndex + 1,contentType.length());			   int pos;			   System.out.println("boun"+boundary);			   //extracting the index of file 			   pos = file.indexOf("filename=\"");			   pos = file.indexOf("\n", pos) + 1;			   pos = file.indexOf("\n", pos) + 1;			   pos = file.indexOf("\n", pos) + 1;			   int boundaryLocation = file.indexOf(boundary, pos) - 4;			   int startPos = ((file.substring(0, pos)).getBytes()).length;			   int endPos = ((file.substring(0, boundaryLocation)).getBytes()).length;			   // creating a new file with the same name and writing the content in new file			   FileOutputStream fileOut = new FileOutputStream(saveFile);			   fileOut.write(dataBytes, startPos, (endPos - startPos));			   fileOut.flush();			   fileOut.close();			 }			   			   		 System.out.println("file"+saveFile);		 BufferedReader bufRdr  = new BufferedReader(new FileReader(saveFile));		 while((line = bufRdr.readLine()) != null)         {               StringTokenizer st = new StringTokenizer(line,",");           while (st.hasMoreTokens())           {			  list.add(st.nextToken());			  System.out.println("listAdded");           }		 		 }										//saving the file values in quick base				System.out.println("size"+list.size());		try{		    for(int i=0 ;i<list.size();i++)		    {		  	    if(header1.equalsIgnoreCase((String)list.get(i)))			    {			      i=i+8;			      //System.out.println("inside list"+list.get(i));			      System.out.println("count"+i);			      //infoHash.put(vendorName,list.get(i));			      System.out.println("Vendor"+list.get(i++));			      //infoHash.put(accNo,list.get(i++));			      System.out.println("Acc No"+list.get(i++));			      //infoHash.put(terms,list.get(i++));			      System.out.println("Terms"+list.get(i++));				  invoiceNumber = (String)list.get(i++);			      infoHash.put(invoice,invoiceNumber);			      //System.out.println("Inv #"+list.get(i++));			      infoHash.put(invDate,list.get(i++));			      //infoHash.put(appAmt,list.get(i++));			      System.out.println("App Amt"+list.get(i++));			      //infoHash.put(countAPP,list.get(i++));			      System.out.println("Count APP"+list.get(i++));			      infoHash.put(invDue,list.get(i++));			      //infoHash.put(recordID,list.get(i++));			      //System.out.println("header id"+list.get(i++));			      primaryKey = qdb12.addRecord(invoiceTableId, infoHash);			      System.out.println("primary key"+primaryKey);				  				  			 			    }			    else 			    {				 			      if(header2.equalsIgnoreCase((String)list.get(i-1)))			      {			         System.out.println("Inside Header 2");			         i=i+3;			      			      }				      else			      {			         //infoHash1.put(lineAccountNumber,list.get(i++));					 System.out.println("Line Acc Num"+list.get(i++));			         //infoHash1.put(lineAccountName,list.get(i++));					 System.out.println("Line Acc Name"+list.get(i++));			         infoHash1.put(lineAmount,list.get(i++));			         infoHash1.put(desc,list.get(i++));					 infoHash1.put(lineHeaderID,primaryKey);			         System.out.println("count after line items"+i);					     primaryKey1 = qdb12.addRecord(lineItemTableId, infoHash1);			         System.out.println("primary key line item"+primaryKey1);				  			       }			     }			  }			}catch(Exception iBizQBException)			 {			   System.out.println("iBizQBException "+iBizQBException.getMessage());			 }		  }	 		 	 	 	 	 %>